// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String
  score       Int       @default(0)
  createdAt   DateTime  @default(now())
  results     Result[]
}

model Quiz {
  id          Int        @id @default(autoincrement())
  title       String
  category    String
  createdAt   DateTime   @default(now())
  questions   Question[]
  results     Result[]
}

model Question {
  id          Int      @id @default(autoincrement())
  text        String
  difficulty  String    // "easy" | "medium" | "hard"
  quizId      Int
  quiz        Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)
  options     Option[]
}

model Option {
  id          Int      @id @default(autoincrement())
  description String
  isTrue      Boolean  @default(false)
  questionId  Int
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}

model Result {
  id          Int      @id @default(autoincrement())
  userId      Int
  quizId      Int
  score       Int
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  quiz        Quiz     @relation(fields: [quizId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([quizId])
}

